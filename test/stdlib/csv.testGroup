#!/usr/bin/env rexx

parse source . . s

group = .TestGroup~new(s)
group~add(.csv.testGroup)

if group~isAutomatedTest then return group

testResult = group~suite~execute~~print

return testResult

::requires 'ooTest.frm'
::requires 'orxpython.cls'

/*
    See: https://docs.python.org/3/library/csv.html
*/
::class csv.testGroup public subclass ooTestCase
    ::method test_writer_reader
        /*
            Python example:
            import csv

            file = 'some.csv'

            with open(file, 'w', newline='') as f:
                writer = csv.writer(f)
                writer.writerow(['a', 'b', 'c'])

            with open(file, newline='') as f:
                reader = csv.reader(f)
                for row in reader:
                    print(row)

            Output:
            ['a', 'b', 'c']
        */

        .Python~import('csv')

        file = 'test-output/test_csv.csv'

        kwargs = .Python~kwargs
        kwargs['newline'] = ''

        -- Write.
        f = .Python~open(file, 'w', kwargs)
        writer = .Python~csv.writer(f)
        writer~writerow(.Python['a', 'b', 'c'])
        f~close

        -- Read.
        f = .Python~open(file, kwargs)
        reader = .Python~csv.reader(f)
        row = .Python~next(reader)
        f~close

        self~assertSame("['a', 'b', 'c']", row~py.fromPythonString)

    ::method test_reader_str
        /*
            Python example:
            import csv
            for row in csv.reader(['one,two,three'])
                print(row)

            Output:
            ['one', 'two', 'three']
        */

        .Python~import('csv')

        csvreader = .Python~csv.reader(.Python['one,two,three'])
        row = .Python~next(csvreader)

        self~assertSame("['one', 'two', 'three']", row~py.fromPythonString)
