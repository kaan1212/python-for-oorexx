#!/usr/bin/env rexx

parse source . . s

group = .TestGroup~new(s)
group~add(.sqlite3.testGroup)

if group~isAutomatedTest then return group

testResult = group~suite~execute~~print

return testResult

::requires 'ooTest.frm'
::requires 'orxpython.cls'

/*
    sqlite3 â€” DB-API 2.0 interface for SQLite databases

    See:
    - https://docs.python.org/3/library/sqlite3.html

    Tutorial:
    - https://docs.python.org/3/library/sqlite3.html
*/
::class sqlite3.testGroup public subclass ooTestCase
    ::method setUp
        expose database
        database = 'test-output/test_sqlite3.db'

        .Python~from('os')~import('remove')
        .Python~from('os.path')~import('isfile')

        if unbox(.Python~isfile(database)) then
            .Python~remove(database)

    ::method test
        expose database
        .Python~import('sqlite3')

        con = .Python~sqlite3.connect(database)
        cur = con~cursor()

        cur~execute('CREATE TABLE movie(title, year, score)')
        cur~execute("INSERT INTO movie VALUES ('Monty Python and the Holy Grail', 1975, 8.2), ('And Now for Something Completely Different', 1971, 7.5)")
        con~commit()

        res = cur~execute('SELECT score FROM movie')
        actual = res~fetchall()

        con~close()

        self~assertSame('[(8.2,), (7.5,)]', actual~py.fromPythonString)
